I want to build a complete phishing detection web application called PhishGuard from scratch on Replit. The project should include both **URL-based detection** and **screenshot-based detection**. Requirements:

1. **Backend (Flask)**
   - Endpoint `/predict_url`:
     - Accepts POST request with JSON: {"features":[...]} (31 features).
     - Loads a trained Random Forest model (`random_forest_model.pkl`) from `models/`.
     - Returns JSON: {"prediction": 0 or 1} where 1 = phishing, 0 = safe.
   - Endpoint `/predict_screenshot`:
     - Accepts POST request with an uploaded image (screenshot of website).
     - Uses a pre-trained CNN model (`cnn_screenshot_model.h5`) from `models/`.
     - Returns JSON: {"prediction": 0 or 1} for safe/phishing.

2. **Machine Learning**
   - `train_url_model.py`:
     - Load phishing dataset CSV.
     - Train Random Forest on URL features.
     - Save model as `models/random_forest_model.pkl`.
   - `train_screenshot_model.py`:
     - Load a dataset of website screenshots labeled safe/phishing.
     - Train a CNN (Keras/TensorFlow).
     - Save model as `models/cnn_screenshot_model.h5`.

3. **Frontend**
   - `index.html` with:
     - Form to input 31 URL-based features.
     - File upload form for screenshot-based detection.
     - Submit buttons for each method.
     - Display results as "Safe" or "Phishing".

4. **Static Files**
   - `static/css/style.css` for styling.
   - `static/js/script.js` to handle fetch requests and display results.

5. **Project Structure**
PhishGuard/
├── app.py
├── train_url_model.py
├── train_screenshot_model.py
├── models/random_forest_model.pkl
├── models/cnn_screenshot_model.h5
├── templates/index.html
├── static/css/style.css
└── static/js/script.js

markdown
Copy code

6. **Dependencies**
- Flask
- pandas
- scikit-learn
- numpy
- joblib
- tensorflow / keras
- OpenCV (opencv-python)
- Pillow (for image handling)

7. **Deployment on Replit**
- Include instructions so the app can be hosted live on Replit.
- Ensure the run command is `python app.py`.

Please generate **all the code files**, structured correctly, with **ready-to-deploy code** for both URL and screenshot detection, so I can run it immediately on Replit.